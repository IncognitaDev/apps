
// deno-fmt-ignore-file
// deno-lint-ignore-file no-explicit-any ban-types ban-unused-ignore
//
// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// To generate this file: deno task start
//        


/**
 * ID
 */
export type ID = number
/**
 * Attribute name, based on locale
 */
export type Name = string
/**
 * Attribute default admin name
 */
export type AdminName = string
/**
 * Attribute unique code
 */
export type Code = string
/**
 * Attribute type
 */
export type Type = ("text" | "textarea" | "price" | "boolean" | "select" | "multiselect" | "datetime" | "date" | "image" | "file" | "checkbox")
/**
 * Attribute swatch type, only use with select type attribute
 */
export type SwatchType = ("dropdown" | "color" | "image" | "text")
/**
 * ID
 */
export type ID1 = number
/**
 * Option default admin name
 */
export type AdminName1 = string
/**
 * Option label, based on locale
 */
export type Label = string
/**
 * Option's swatch type value
 */
export type SwatchValue = string
/**
 * Attribute validation, only use with text type attribute
 */
export type Validation = ("numeric" | "email" | "decimal" | "url")
/**
 * Attribute's position
 */
export type Position = number
/**
 * Can use this attribute as comparable or not
 */
export type IsComparable = (0 | 1)
/**
 * Can use this attribute as configurable or not
 */
export type IsConfigurable = (0 | 1)
/**
 * This attribute will be use as required or not
 */
export type IsRequired = (0 | 1)
/**
 * This attribute will be use as unique or not
 */
export type IsUnique = (0 | 1)
/**
 * This attribute will be use in category's filter or not
 */
export type IsFilterable = (0 | 1)
/**
 * This attribute is user define or system define
 */
export type IsUserDefine = (0 | 1)
/**
 * This attribute will visible on product view page or not
 */
export type IsVisibleOnFront = (0 | 1)
/**
 * Entry of this attribute will record in Flat table or not
 */
export type UseInFlat = (0 | 1)
/**
 * This attribute will use with multi-locale or not
 */
export type ValuePerLocale = (0 | 1)
/**
 * This attribute will use with multi-channel or not
 */
export type ValuePerChannel = (0 | 1)
/**
 * Created at
 */
export type CreatedAt = string
/**
 * Updated at
 */
export type UpdatedAt = string
/**
 * Current Page
 */
export type CurrentPage = number
/**
 * From
 */
export type From = number
/**
 * Last Page
 */
export type LastPage = number
/**
 * Per Page
 */
export type PerPage = number
/**
 * Links
 */
export type Links = {
url?: string
label?: string
active?: boolean
}[]
/**
 * Path
 */
export type Path = number
/**
 * To
 */
export type To = number
/**
 * Total
 */
export type Total = number
/**
 * ID
 */
export type ID2 = number
/**
 * Attribute family's code
 */
export type Code1 = string
/**
 * Attribute family's name
 */
export type Name1 = string
/**
 * Attribute family's status
 */
export type Status = ("0" | "1")
/**
 * ID
 */
export type ID3 = number
/**
 * Attribute group's code
 */
export type Code2 = string
/**
 * Attribute group's name
 */
export type Name2 = string
/**
 * Attribute group's swatch type
 */
export type SwatchType1 = number
/**
 * Created at
 */
export type CreatedAt1 = string
/**
 * Updated at
 */
export type UpdatedAt1 = string
/**
 * Created at
 */
export type CreatedAt2 = string
/**
 * Updated at
 */
export type UpdatedAt2 = string
/**
 * ID
 */
export type ID4 = number
/**
 * Category's name
 */
export type Name3 = string
/**
 * Category's slug
 */
export type Slug = string
/**
 * Category's content display mode
 */
export type DisplayMode = ("products_and_description" | "products_only" | "description_only")
/**
 * Category's description
 */
export type Description = string
/**
 * Category's meta title
 */
export type MetaTitle = string
/**
 * Category's meta description
 */
export type MetaDescription = string
/**
 * Category's meta keywords
 */
export type MetaKeywords = string
/**
 * Category's status
 */
export type Status1 = ("0" | "1")
/**
 * Category's image URL
 */
export type ImageURL = string
/**
 * Category's icon path
 */
export type CategoryIconPath = string
/**
 * Created at
 */
export type CreatedAt3 = string
/**
 * Updated at
 */
export type UpdatedAt3 = string
/**
 * ID
 */
export type ID5 = number
/**
 * Product SKU
 */
export type SKU = string
/**
 * Product type
 */
export type Type1 = ("simple" | "configurable" | "virtual" | "grouped" | "downloadable" | "bundle")
/**
 * Product name
 */
export type Name4 = string
/**
 * Product URL key
 */
export type URLKey = string
/**
 * Product price
 */
export type Price = number
/**
 * Product's formatted price
 */
export type FormattedPrice = string
/**
 * Product's short description
 */
export type ShortDescription = string
/**
 * Product's description
 */
export type Description1 = string
/**
 * ID
 */
export type ID6 = number
/**
 * Image type
 */
export type Type2 = "images"
/**
 * Image path
 */
export type Path1 = string
/**
 * Image URL
 */
export type URL = string
/**
 * Original image URL
 */
export type OriginalImageUrl = string
/**
 * Small image URL
 */
export type SmallImageUrl = string
/**
 * Medium image URL
 */
export type MediumImageUrl = string
/**
 * Original image URL
 */
export type LargeImageUrl = string
/**
 * Product ID
 */
export type ProductID = number
/**
 * Image position
 */
export type Position1 = number
/**
 * ID
 */
export type ID7 = number
/**
 * Video type
 */
export type Type3 = "videos"
/**
 * Video path
 */
export type Path2 = string
/**
 * Video URL
 */
export type URL1 = string
/**
 * Product's base image
 */
export type BaseImage = {
small_image_url?: string
medium_image_url?: string
large_image_url?: string
original_image_url?: string
}[]
/**
 * Created at
 */
export type CreatedAt4 = string
/**
 * Updated at
 */
export type UpdatedAt4 = string
/**
 * Product's reviews
 */
export type Reviews = {
total?: number
total_rating?: string
average_rating?: string
percentage?: {
"1"?: number
"2"?: number
"3"?: number
"4"?: number
"5"?: number
}[]
}[]
/**
 * Product's in stock status
 */
export type InStock = boolean
/**
 * Product's in saved status
 */
export type InSaved = boolean
/**
 * Product's is in cart or not status
 */
export type InItemInCart = boolean
/**
 * Show quantity changer status for front end
 */
export type ShowQuantityChanger = boolean
/**
 * Currency options
 */
export type CurrencyOptions = {
symbol?: string
decimal?: string
format?: string
}[]
/**
 * Product's special price, Only use if special_price is applied to product
 */
export type SpecialPrice = number
/**
 * Product's formatted special price, Only use if special_price is applied to product
 */
export type FormattedSpecialPrice = string
/**
 * Product's regular price
 */
export type RegularPrice = number
/**
 * Product's formatted regular price
 */
export type FormattedRegularPrice = string
/**
 * ID
 */
export type ID8 = number
/**
 * Product type
 */
export type Type4 = ("simple" | "configurable" | "virtual" | "grouped" | "downloadable" | "bundle")
/**
 * Product's attribute family ID
 */
export type AttributeFamilyID = number
/**
 * Product SKU
 */
export type SKU1 = string
/**
 * Product number
 */
export type ProductNumber = string
/**
 * Product name
 */
export type Name5 = string
/**
 * Product URL key
 */
export type URLKey1 = string
/**
 * Product's tax category ID
 */
export type TaxCategoryID = number
/**
 * Product's new status
 */
export type New = boolean
/**
 * Product's featured status
 */
export type Featured = boolean
/**
 * Product will show individually at store or not status
 */
export type VisibleIndividually = boolean
/**
 * Guest can checkout with this product or not status
 */
export type GuestCheckout = boolean
/**
 * Product's status
 */
export type Status2 = boolean
/**
 * Color i.e. product's attribute(s) code
 */
export type Color = number
/**
 * Size i.e. product's attribute(s) code
 */
export type Size = number
/**
 * Brand i.e. product's attribute(s) code
 */
export type Brand = number
/**
 * Product's short description
 */
export type ShortDescription1 = string
/**
 * Product's description
 */
export type Description2 = string
/**
 * Product's meta title
 */
export type MetaTitle1 = string
/**
 * Product's meta keyword which helps in SEO
 */
export type MetaKeywords1 = string
/**
 * Product's meta description
 */
export type MetaDescription1 = string
/**
 * Product's price
 */
export type Price1 = number
/**
 * Product's cost price
 */
export type Cost = number
/**
 * Product's special price
 */
export type SpecialPrice1 = number
/**
 * Special price will start from which date
 */
export type SpecialPriceFrom = string
/**
 * Special price will end on which date
 */
export type SpecialPriceTo = string
/**
 * Product's length
 */
export type Length = number
/**
 * Product's width
 */
export type Width = number
/**
 * Product's height
 */
export type Height = number
/**
 * Product's weight to calculate shipping charges
 */
export type Weight = number
/**
 * ID
 */
export type ID9 = number
/**
 * Product quantity
 */
export type Qty = number
/**
 * Inventry belongs to which product ID
 */
export type ProductID1 = number
/**
 * Product inventry belongs to which inventory source
 */
export type InventorySourceID = number
/**
 * Product inventry belongs to which vendor ID
 */
export type VendorID = number
/**
 * ID
 */
export type ID10 = number
/**
 * Product quantity
 */
export type Qty1 = number
/**
 * Inventry belongs to which product ID
 */
export type ProductID2 = number
/**
 * Channel id from which channel order placed.
 */
export type ChannelID = number
/**
 * ID
 */
export type ID11 = number
/**
 * Product quantity
 */
export type Qty2 = number
/**
 * Discount type unit
 */
export type ValueType = ("fixed" | "discount")
/**
 * Discount amount
 */
export type Value = number
/**
 * Product's ID
 */
export type ProductID3 = number
/**
 * Entry belongs to which customer group ID
 */
export type CustomerGroupID = number
/**
 * Created at
 */
export type CreatedAt5 = string
/**
 * Updated at
 */
export type UpdatedAt5 = string
/**
 * ID
 */
export type ID12 = number
/**
 * Locale code
 */
export type Locale = string
/**
 * Channel code
 */
export type Channel = string
/**
 * Text type attribute value i.e. Name
 */
export type TextValue = string
/**
 * Boolean type attribute value i.e. Guest Checkout
 */
export type BooleanValue = boolean
/**
 * Integer type attribute value i.e. Custom attribute Age
 */
export type IntegerValue = number
/**
 * Float type attribute value i.e. Price
 */
export type FloatValue = number
/**
 * Datetime type attribute value
 */
export type DatetimeValue = string
/**
 * Inventry belongs to which product ID
 */
export type ProductID4 = number
/**
 * Attribute ID
 */
export type AttributeID = number
/**
 * Product's parent ID
 */
export type ParentID = number
/**
 * Created at
 */
export type CreatedAt6 = string
/**
 * Updated at
 */
export type UpdatedAt6 = string
/**
 * Grouped's product quantity, Only use with grouped type product.
 */
export type Qty3 = number
/**
 * Is saleable status, Only use with grouped type product.
 */
export type IsSaleable = boolean
/**
 * Product's forrmated price, Only use with grouped type product.
 */
export type FormattedPrice1 = string
/**
 * Use to show quantity change option at product view page, Only use with grouped type product.
 */
export type ShowQuantityChanger1 = boolean
/**
 * ID
 */
export type ID13 = number
/**
 * Link title
 */
export type Title = string
/**
 * ID
 */
export type ID14 = number
/**
 * Locale code
 */
export type Locale1 = string
/**
 * Link title based on the locale
 */
export type Title1 = string
/**
 * Downloadable product's link ID
 */
export type ProductDownloadableLinkID = number
/**
 * Link type
 */
export type Type5 = ("file" | "url")
/**
 * Image URL, only use with type `url`
 */
export type URL2 = string
/**
 * File's stored path, only use with type `file`
 */
export type File = string
/**
 * Stored File's name, only use with type `file`
 */
export type FileName = string
/**
 * Stored file's URL, only use with type `file`
 */
export type FileURL = string
/**
 * Link's additional formatted price
 */
export type Price2 = string
/**
 * Sample type
 */
export type SampleType = ("file" | "url")
/**
 * Sample link's URL, only use if sample_type is url
 */
export type SampleURL = string
/**
 * Sample file's path, only use if sample_type is file
 */
export type SampleFile = string
/**
 * Sample file name, only use if sample_type is file
 */
export type SampleFileName = string
/**
 * Sample file's URL, only use if sample_type is file
 */
export type SampleFileURL = string
/**
 * Sample file download URL, only use if sample_type is file
 */
export type SampleDownloadURL = string
/**
 * Link file download count for customer
 */
export type Downloads = number
/**
 * Link sort order
 */
export type SortOrder = number
/**
 * Product ID
 */
export type ProductID5 = number
/**
 * Created at
 */
export type CreatedAt7 = string
/**
 * Updated at
 */
export type UpdatedAt7 = string
/**
 * ID
 */
export type ID15 = number
/**
 * Sample title
 */
export type Title2 = string
/**
 * ID
 */
export type ID16 = number
/**
 * Locale code
 */
export type Locale2 = string
/**
 * Sample title based on the locale
 */
export type Title3 = string
/**
 * Downloadable product's sample ID
 */
export type ProductDownloadableSampleID = number
/**
 * Sample type
 */
export type Type6 = ("file" | "url")
/**
 * Image URL, only use with type `url`
 */
export type URL3 = string
/**
 * File's stored path, only use with type `file`
 */
export type File1 = string
/**
 * Stored File's name, only use with type `file`
 */
export type FileName1 = string
/**
 * Stored file's URL, only use with type `file`
 */
export type FileURL1 = string
/**
 * Sample file download URL, only use if type is file
 */
export type DownloadURL = string
/**
 * Sample sort order
 */
export type SortOrder1 = number
/**
 * Product ID
 */
export type ProductID6 = number
/**
 * Created at
 */
export type CreatedAt8 = string
/**
 * Updated at
 */
export type UpdatedAt8 = string
/**
 * Info: this property will only use with bundle type product.
 */
export type BundleOptions = {
options?: {
id?: number
label?: string
type?: ("select" | "checkbox" | "multiselect" | "radio")
is_required?: ("0" | "1")
sort_order?: number
products?: {
id?: number
qty?: number
name?: string
product_id?: number
is_default?: ("0" | "1")
in_stock?: ("true" | "false")
inventory?: number
price?: {
regular_price?: {
price?: number
formated_price?: string
}[]
final_price?: {
price?: number
formated_price?: string
}[]
}[]
}[]
}[]
}[]
/**
 * Text of the dropdown that will display at product view page
 */
export type ChooseText = string
/**
 * List of configurable attributes with available options
 */
export type Attributes = {
id?: number
code?: string
label?: string
swatch_type?: string
options?: {
id?: number
label?: string
swatch_type?: string
products?: {
attributes?: number
}[]
}[]
}[]
/**
 * ID
 */
export type ID17 = number
/**
 * Review title
 */
export type Title4 = string
/**
 * Review rating
 */
export type Rating = ("5" | "4" | "3" | "2" | "1")
/**
 * Review comment
 */
export type Comment = string
/**
 * Customer Name
 */
export type Name6 = string
/**
 * Review status
 */
export type Status3 = ("pending" | "approved" | "disapproved")
/**
 * Review attachments
 */
export type Attachments = string
/**
 * Created at
 */
export type CreatedAt9 = string
/**
 * Updated at
 */
export type UpdatedAt9 = string
/**
 * Product ID
 */
export type ProductID7 = number
/**
 * Customer ID
 */
export type CustomerID = number
/**
 * ID
 */
export type ID18 = number
/**
 * Customer's First Name
 */
export type FirstName = string
/**
 * Customer's Last Name
 */
export type LastName = string
/**
 * Customer's Email
 */
export type Email = string
/**
 * Customer's Gender
 */
export type Gender = string
/**
 * Customer's Date of Birth
 */
export type DateOfBirth = string
/**
 * Customer's Phone Number
 */
export type Phone = string
/**
 * Customer's Status
 */
export type Status4 = string
/**
 * Customer's Newsletter Subscription
 */
export type NewsletterSubscription = string
/**
 * Customer's Image
 */
export type Image = string
/**
 * Customer's notes
 */
export type Notes = string
/**
 * Created at
 */
export type CreatedAt10 = string
/**
 * Updated at
 */
export type UpdatedAt10 = string
/**
 * ID
 */
export type ID19 = number
/**
 * Channel code
 */
export type Code3 = string
/**
 * Channel name
 */
export type Name7 = string
/**
 * Channel description
 */
export type Description3 = string
/**
 * Channel timezone
 */
export type Timezone = string
/**
 * Channel theme code
 */
export type Theme = string
/**
 * Channel home page content
 */
export type HomePageContent = string
/**
 * Channel footer content
 */
export type FooterContent = string
/**
 * Channel host name, website URL
 */
export type Hostname = string
/**
 * Channel logo, website's logo
 */
export type Logo = string
/**
 * Channel logo URL, website's logo URL
 */
export type LogoURL = string
/**
 * Channel favicon, website's favicon
 */
export type Favicon = string
/**
 * Channel favicon URL, website's favicon URL
 */
export type FaviconURL = string
/**
 * ID
 */
export type ID20 = number
/**
 * Locale code
 */
export type Code4 = string
/**
 * Locale name
 */
export type Name8 = string
/**
 * Created at
 */
export type CreatedAt11 = string
/**
 * Updated at
 */
export type UpdatedAt11 = string
/**
 * Locale direction
 */
export type Direction = ("ltr" | "rtl")
/**
 * Locale image
 */
export type Image1 = string
/**
 * Channel's default root category ID
 */
export type RootCategoryId = number
/**
 * Created at
 */
export type CreatedAt12 = string
/**
 * Updated at
 */
export type UpdatedAt12 = string
/**
 * Core field code
 */
export type Value1 = string
/**
 * Core field code
 */
export type Value2 = string
/**
 * ID
 */
export type ID21 = number
/**
 * Core field code
 */
export type Code5 = string
/**
 * Core field value
 */
export type Value3 = string
/**
 * Channel code
 */
export type ChannelCode = string
/**
 * Locale code
 */
export type LocaleCode = string
/**
 * Created at
 */
export type CreatedAt13 = string
/**
 * Updated at
 */
export type UpdatedAt13 = string
/**
 * ID
 */
export type ID22 = number
/**
 * Country code
 */
export type Code6 = string
/**
 * Country name
 */
export type Name9 = string
/**
 * ID
 */
export type ID23 = number
/**
 * Country code
 */
export type CountryCode = string
/**
 * State code
 */
export type Code7 = string
/**
 * State default name
 */
export type DefaultName = string
/**
 * Country ID
 */
export type CountryID = number
/**
 * ID
 */
export type ID24 = number
/**
 * Locale code
 */
export type Locale4 = string
/**
 * State default name
 */
export type DefaultName1 = string
/**
 * Country's state ID
 */
export type CountrySStateID = number
/**
 * ID
 */
export type ID25 = number
/**
 * Currency code
 */
export type Code8 = string
/**
 * Currency name
 */
export type Name10 = string
/**
 * Created at
 */
export type CreatedAt14 = string
/**
 * Updated at
 */
export type UpdatedAt14 = string
/**
 * Currency symbol
 */
export type Symbol = string
/**
 * ID
 */
export type ID26 = number
/**
 * channel_id
 */
export type ChannelId = number
/**
 * type
 */
export type Type7 = string
/**
 * name
 */
export type Name11 = string
/**
 * status
 */
export type Status5 = number
/**
 * Created at
 */
export type CreatedAt15 = string
/**
 * Updated at
 */
export type UpdatedAt15 = string
/**
 * sort_order
 */
export type SortOrder2 = number
/**
 * ID
 */
export type ID27 = number
/**
 * Customer's First Name
 */
export type FirstName1 = string
/**
 * Customer's Last Name
 */
export type LastName1 = string
/**
 * Customer's Company Name
 */
export type CompanyName = string
/**
 * Customer's VAT ID
 */
export type VATID = string
/**
 * Customer's Address1
 */
export type Address1 = string
/**
 * Customer's Address2
 */
export type Address2 = string
/**
 * Address Country, contains only country code US (e.g. United States)
 */
export type Country1 = string
/**
 * Address Country Name, contains complate country name (e.g. United States)
 */
export type CountryName = string
/**
 * Address State, contains only state code MD (e.g. Maryland)
 */
export type State = string
/**
 * Address City
 */
export type City = string
/**
 * Address Postcode
 */
export type Postcode = number
/**
 * Customer's Phone Number
 */
export type Phone1 = string
/**
 * Customer's Default Address
 */
export type IsDefaultAddressOrNot = ("1" | "0")
/**
 * Created at
 */
export type CreatedAt16 = string
/**
 * Updated at
 */
export type UpdatedAt16 = string
/**
 * ID
 */
export type ID28 = number
/**
 * Customer email
 */
export type CustomerEmail = string
/**
 * Customer first name
 */
export type CustomerFirstName = string
/**
 * Customer first name
 */
export type CustomerLastName = string
/**
 * Selected shipping method name for the current cart
 */
export type ShippingMethod = string
/**
 * Applied coupon code to the cart
 */
export type CouponCode = string
/**
 * Total number of cart's item
 */
export type ItemCount = number
/**
 * Total quantity of cart's items
 */
export type ItemQuantity = number
/**
 * Base Currency Code
 */
export type BaseCurrencyCode = string
/**
 * Channel/Store Currency Code
 */
export type ChannelCurrencyCode = string
/**
 * Cart Currency Code i.e. Currency code in which product added to the cart
 */
export type CartCurrencyCode = string
/**
 * Grand Total of the Cart
 */
export type GrandTotal = number
/**
 * Formatted Grand Total of the Cart
 */
export type FormattedGrandTotal = number
/**
 * Base Grand Total of the Cart
 */
export type BaseGrandTotal = number
/**
 * Formatted Base Grand Total of the Cart
 */
export type FormattedBaseGrandTotal = string
/**
 * Sub Total of the Cart
 */
export type SubTotal = number
/**
 * Formatted Sub Total of the Cart
 */
export type FormattedSubTotal = number
/**
 * Base Sub Total of the Cart
 */
export type BaseSubTotal = number
/**
 * Formatted Base Sub Total of the Cart
 */
export type FormattedBaseSubTotal = string
/**
 * Tax Total of the Cart
 */
export type TaxTotal = number
/**
 * Formatted Tax Total of the Cart
 */
export type FormattedTaxTotal = number
/**
 * Base Tax Total of the Cart
 */
export type BaseTaxTotal = number
/**
 * Formatted Base Tax Total of the Cart
 */
export type FormattedBaseTaxTotal = string
/**
 * Discount Total of the Cart
 */
export type DiscountTotal = number
/**
 * Formatted Discount Total of the Cart
 */
export type FormattedDiscountTotal = number
/**
 * Base Discount Total of the Cart
 */
export type BaseDiscountTotal = number
/**
 * Formatted Base Discount Total of the Cart
 */
export type FormattedBaseDiscountTotal = string
/**
 * Cart is owned by customer or guest
 */
export type CartGuestStatus = boolean
/**
 * Cart status for active or inactive
 */
export type CartActiveStatus = boolean
/**
 * ID
 */
export type ID29 = number
/**
 * Cart Item quantity
 */
export type ItemQuantity1 = number
/**
 * Product SKU
 */
export type ProductSKU = string
/**
 * Cart product type
 */
export type ProductType = string
/**
 * Cart product name
 */
export type ProductName = string
/**
 * Cart item weight per unit
 */
export type ProductWeight = number
/**
 * Total cart's item weight
 */
export type TotalCartSItemWeight = number
/**
 * Cart item price
 */
export type ProductPrice = number
/**
 * Formatted price of cart's item
 */
export type FormattedPrice2 = number
/**
 * Cart's item base price
 */
export type ProductBasePrice = number
/**
 * Formatted Base Price of the Cart item
 */
export type FormattedBasePrice = string
/**
 * Cart item total
 */
export type ItemTotal = number
/**
 * Formatted total of cart's item
 */
export type FormattedTotal = number
/**
 * Cart's item base total
 */
export type ProductBaseTotal = number
/**
 * Formatted base total of the Cart item
 */
export type FormattedBaseTotal = string
/**
 * Tax percentage that applied to the cart item
 */
export type TaxPercentage = number
/**
 * Tax Amount calculated at cart item price
 */
export type TaxAmount = number
/**
 * Formatted tax amount calculated at cart item price
 */
export type FormattedTaxAmount = string
/**
 * Base tax amount calculated at cart item price
 */
export type BaseTaxAmount = number
/**
 * Formatted base tax amount calculated at cart item price
 */
export type FormattedBaseTaxAmount = string
/**
 * selected_configurable_option, super_attribute, and attributes fields will use in case of configurable type product.
 */
export type AdditionalInfoAboutCartItem = {
additional?: {
selected_configurable_option?: number
quantity?: number
product_id?: number
parent_id?: number
super_attribute?: {
additional?: number
}[]
attributes?: {
size?: {
option_id?: number
option_label?: string
attribute_name?: string
}[]
color?: {
option_id?: number
option_label?: string
attribute_name?: string
}[]
}[]
}[]
}[]
/**
 * Created at
 */
export type CreatedAt17 = string
/**
 * Updated at
 */
export type UpdatedAt17 = string
/**
 * ID
 */
export type ID30 = number
/**
 * Shipping/Carrier code
 */
export type ShippingCarrierCode = string
/**
 * Shipping/Carrier title
 */
export type ShippingCarrierTitle = string
/**
 * Shipping method code
 */
export type ShippingMethodCode = string
/**
 * Shipping Method title
 */
export type ShippingMethodTitle = string
/**
 * Shipping Method description
 */
export type ShippingMethodDescription = string
/**
 * Shipping price calculated at the checkout
 */
export type ShippingPrice = number
/**
 * Formatted shipping price calculated at the checkout
 */
export type FormattedShippingPrice = string
/**
 * Base shipping price
 */
export type BaseShippingPrice = number
/**
 * Formatted base shipping price
 */
export type FormattedBaseShippingPrice = string
/**
 * Created at
 */
export type CreatedAt18 = string
/**
 * Updated at
 */
export type UpdatedAt18 = string
/**
 * ID
 */
export type ID31 = number
/**
 * Payment method code
 */
export type PaymentMethodCode = string
/**
 * Payment Method title
 */
export type PaymentMethodTitle = string
/**
 * Created at
 */
export type CreatedAt19 = string
/**
 * Updated at
 */
export type UpdatedAt19 = string
/**
 * ID
 */
export type ID32 = number
/**
 * Customer's First Name
 */
export type FirstName2 = string
/**
 * Customer's Last Name
 */
export type LastName2 = string
/**
 * Customer's Full Name
 */
export type CustomerFullName = string
/**
 * Customer's email
 */
export type CustomerSEmail = string
/**
 * Cart's address detail
 */
export type CartAddress1 = {
address1?: {
address1?: string
}[]
}[]
/**
 * Customer's Address2
 */
export type Address21 = string
/**
 * Address Country, contains only country code US (e.g. United States)
 */
export type Country2 = string
/**
 * Address Country Name, contains complate country name (e.g. United States)
 */
export type CountryName1 = string
/**
 * Address State, contains only state code MD (e.g. Maryland)
 */
export type State1 = string
/**
 * Address City
 */
export type City1 = string
/**
 * Address Postcode
 */
export type Postcode1 = number
/**
 * Customer's Phone Number
 */
export type Phone2 = string
/**
 * Created at
 */
export type CreatedAt20 = string
/**
 * Updated at
 */
export type UpdatedAt20 = string
/**
 * Created at
 */
export type CreatedAt21 = string
/**
 * Updated at
 */
export type UpdatedAt21 = string
/**
 * ID
 */
export type ID33 = number
/**
 * Increment ID
 */
export type IncrementID = string
/**
 * Customer's Email
 */
export type Email1 = string
/**
 * Customer's First Name
 */
export type FirstName3 = string
/**
 * Customer's Last Name
 */
export type LastName3 = string
/**
 * Order Status
 */
export type Status6 = string
/**
 * Payment Title
 */
export type PaymentTitle = string
/**
 * Base Currency Code
 */
export type BaseCurrencyCode1 = string
/**
 * Order Currency Code
 */
export type OrderCurrencyCode = string
/**
 * Grand Total of the Order
 */
export type GrandTotal1 = number
/**
 * Formatted Grand Total of the Order
 */
export type FormattedGrandTotal1 = number
/**
 * Base Grand Total of the Order
 */
export type BaseGrandTotal1 = number
/**
 * Formatted Base Grand Total of the Order
 */
export type FormattedBaseGrandTotal1 = string
/**
 * ID
 */
export type ID34 = number
/**
 * SKU
 */
export type SKU2 = string
/**
 * Product's type
 */
export type Type8 = string
/**
 * Product name of ordered item
 */
export type Name12 = string
/**
 * Cart coupon code
 */
export type CouponCode1 = string
/**
 * Product's weight of ordered item
 */
export type ItemSWeight = number
/**
 * Product ordered quantity
 */
export type OrderedQuantity = number
/**
 * Total shipped quantity of ordered product
 */
export type ShippedQuantity = number
/**
 * Total invoiced quantity of ordered product
 */
export type InvoicedQuantity = number
/**
 * Total canceled quantity of ordered product
 */
export type CanceledQuantity = number
/**
 * Total refunded quantity of ordered product
 */
export type RefundedQuantity = number
/**
 * Price of ordered item
 */
export type OrderedItemPrice = number
/**
 * Formatted Price of the Order Item
 */
export type FormattedPrice3 = string
/**
 * Base price of the Order Item
 */
export type BasePrice = number
/**
 * Formatted Base price of the Order Item
 */
export type FormattedBasePrice1 = string
/**
 * Total of ordered item
 */
export type OrderedItemTotal = number
/**
 * Formatted total of ordered item
 */
export type FormattedOrderedItemTotal = string
/**
 * Base total of the Order Item
 */
export type BaseTotal = number
/**
 * Formatted base total of the Order Item
 */
export type FormattedBaseTotal1 = string
/**
 * Total invoiced amount of ordered item
 */
export type TotalInvoicedOfOrderedItem = number
/**
 * Total base invoiced amount of ordered item
 */
export type TotalBaseInvoicedOfOrderedItem = string
/**
 * Total refunded amount of ordered item
 */
export type TotalRefundedAmountOfOrderedItem = number
/**
 * Total base refunded amount of ordered item
 */
export type TotalBaseRefundedAmountOfOrderedItem = string
/**
 * Tax percentage that applied on order item
 */
export type TaxPercentageAppliedOnOrderedItem = number
/**
 * Tax amount of ordered item
 */
export type TaxAmountOfOrderedItem = number
/**
 * Base tax amount of ordered item
 */
export type BaseTaxAmountOfOrderedItem = string
/**
 * Product ID
 */
export type ProductID8 = number
/**
 * Product type of ordered item
 */
export type ProductTypeOfOrderedItem = string
/**
 * Order ID
 */
export type OrderID = number
/**
 * Parent ID of Product
 */
export type ParentIDOfProduct = number
/**
 * Created at
 */
export type CreatedAt22 = string
/**
 * Updated at
 */
export type UpdatedAt22 = string
/**
 * Created at
 */
export type CreatedAt23 = string
/**
 * Updated at
 */
export type UpdatedAt23 = string
/**
 * ID
 */
export type ID35 = number
/**
 * Increment ID
 */
export type IncrementID1 = string
/**
 * Invoice's State/Status
 */
export type InvoiceSStateStatus = ("pending" | "paid" | "refunded")
/**
 * Invoice Email Sent Status
 */
export type InvoiceEmailSent = boolean
/**
 * Total invoiced quantity
 */
export type TotalInvoicedQuantity = number
/**
 * Store base currency code
 */
export type StoreBaseCurrencyCode = string
/**
 * Default Channel/Website Currency Code
 */
export type ChannelWebsiteCurrencyCode = string
/**
 * Order currency code at the time order placed from store
 */
export type OrderCurrencyCode1 = string
/**
 * Invoice Sub Total
 */
export type InvoiceSubTotal = number
/**
 * Formatted invoice sub total
 */
export type FormattedInvoiceSubTotal = string
/**
 * Invoice base sub total
 */
export type InvoiceBaseSubTotal = number
/**
 * Formatted Invoice base sub total
 */
export type FormattedInvoiceBaseSubTotal = string
/**
 * Invoice grand total
 */
export type InvoiceGrandTotal = number
/**
 * Formatted invoice grand total
 */
export type FormattedInvoiceGrandTotal = string
/**
 * Invoice base grand total
 */
export type InvoiceBaseGrandTotal = number
/**
 * Formatted invoice base grand total
 */
export type FormattedInvoiceBaseGrandTotal = string
/**
 * Order ID
 */
export type OrderID1 = number
/**
 * Order's address id
 */
export type OrderSAddressID = number
/**
 * Created at
 */
export type CreatedAt24 = string
/**
 * Updated at
 */
export type UpdatedAt24 = string
/**
 * Invoice's transaction id
 */
export type InvoiceSTransactionID = string
/**
 * Invoice reminder count
 */
export type InvoiceReminderCount = number
/**
 * Time for next invoice reminder
 */
export type TimeForNextInvoiceReminder = string
/**
 * ID
 */
export type ID36 = number
/**
 * Order's shipment status
 */
export type OrderSShipmentStatus = string
/**
 * Shipment total quantity
 */
export type ShipmentTotalQuantity = number
/**
 * Total weight of shipment
 */
export type TotalWeightOfShipment = number
/**
 * Carrier/Shipment Code (Shipping Method Code)
 */
export type CarrierShipmentCode = string
/**
 * Carrier Title (Shipping Method Title)
 */
export type CarrierTitle = string
/**
 * Shipment's tracking number
 */
export type TrackingID = string
/**
 * Shipment Email Sent Status
 */
export type ShipmentEmailSent = boolean
/**
 * Order ID
 */
export type OrderID2 = number
/**
 * Shipment's address ID of order
 */
export type ShipmentSAddressIDOfOrder = number
/**
 * Created at
 */
export type CreatedAt25 = string
/**
 * Updated at
 */
export type UpdatedAt25 = string
/**
 * ID
 */
export type ID37 = number
/**
 * Transaction id
 */
export type TransactionID = string
/**
 * Transaction status
 */
export type TransactionStatus = string
/**
 * Transaction type
 */
export type TransactionType = string
/**
 * Payment method used for transaction
 */
export type PaymentMethodUsedForTransaction = string
/**
 * Invoice id
 */
export type InvoiceID = number
/**
 * Order id
 */
export type OrderID3 = number
/**
 * Created at
 */
export type CreatedAt26 = string
/**
 * Updated at
 */
export type UpdatedAt26 = string
/**
 * Transaction amount paid
 */
export type TransactionAmountPaid = number
/**
 * ID
 */
export type ID38 = number
/**
 * Channel id
 */
export type ChannelID1 = number
/**
 * Product id
 */
export type ProductID9 = number
/**
 * Customer id
 */
export type CustomerID1 = number
/**
 * Date on which wishlist's product moved to cart
 */
export type ProductMoveToCartDate = string
/**
 * Status for sharing customer's wishlist
 */
export type WishlistSharedStatus = boolean
/**
 * Date on which wishlist's product will move to cart
 */
export type DateOfMovingProduct = string
/**
 * Created at
 */
export type CreatedAt27 = string
/**
 * Updated at
 */
export type UpdatedAt27 = string

export interface OpenAPI {
/**
 * Returns attribute list, if you want to retrieve all attributes at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/attributes": {
searchParams: {
/**
 * Attribute ID
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Attribute[]
meta?: Pagination
}
}
/**
 * Returns shop attribute by id
 */
"GET /api/v1/attributes/:id": {
response: {
data?: Attribute
}
}
/**
 * Returns attribute family list, if you want to retrieve all attribute families at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/attribute-families": {
searchParams: {
/**
 * Attribute Family ID
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: AttributeFamily[]
meta?: Pagination
}
}
/**
 * Returns shop attribute family by id
 */
"GET /api/v1/attribute-families/:id": {
response: {
data?: AttributeFamily
}
}
/**
 * Returns category list, if you want to retrieve all categories at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/categories": {
searchParams: {
/**
 * Category ID
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Category[]
meta?: Pagination
}
}
/**
 * Returns shop category by id
 */
"GET /api/v1/categories/:id": {
response: {
data?: Category
}
}
/**
 * Returns shop descendant categories based on the parent category id
 */
"GET /api/v1/descendant-categories": {
searchParams: {
/**
 * Category id
 */
parent_id?: number
}
response: {
data?: Category
}
}
/**
 * Returns product list, if you want to retrieve all products at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/products": {
searchParams: {
/**
 * Product ID
 */
id?: number
/**
 * Product SKU
 */
sku?: string
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Product[]
meta?: Pagination
}
}
/**
 * Returns shop product by id
 */
"GET /api/v1/products/:id": {
response: {
data?: Product
}
}
/**
 * Get product's additional info by id
 */
"GET /api/v1/products/:id/additional-information": {
response: {
data?: {
id?: number
code?: string
label?: string
value?: string
admin_name?: string
type?: ("text" | "textarea" | "price" | "boolean" | "select" | "multiselect" | "datetime" | "date" | "image" | "file" | "checkbox")
}[]
}
}
/**
 * Returns configurable product options by id
 */
"GET /api/v1/products/:id/configurable-config": {
response: {
data?: ProductConfigurableConfig
}
}
/**
 * Store product's review by login customer
 */
"POST /api/v1/products/:productId/reviews": {
response: {
message?: string
data?: ProductReview
}
}
/**
 * Returns channel list, if you want to retrieve all channels at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/channels": {
searchParams: {
/**
 * Channel id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Channel1[]
meta?: Pagination
}
}
/**
 * Returns shop channel by id
 */
"GET /api/v1/channels/:id": {
response: {
data?: Channel1
}
}
/**
 * Get core config field value by id
 */
"GET /api/v1/core-configs": {
searchParams: {
/**
 * Config id
 */
"_config[]": string[]
}
response: {
data?: ConfigValue
}
}
/**
 * Returns config list, if you want to retrieve all config records at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/core-config-fields": {
searchParams: {
/**
 * Config Record id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Config[]
meta?: Pagination
}
}
/**
 * Returns config's record by id
 */
"GET /api/v1/core-config-fields/:id": {
response: {
data?: Config
}
}
/**
 * Returns country list, if you want to retrieve all countries at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/countries": {
searchParams: {
/**
 * Country id
 */
id?: number
/**
 * Country code
 */
code?: string
/**
 * Country name
 */
name?: string
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Country[]
meta?: Pagination
}
}
/**
 * Returns shop country by id
 */
"GET /api/v1/countries/:id": {
response: {
data?: Country
}
}
/**
 * Returns states using country code
 */
"GET /api/v1/countries-states": {
searchParams: {
/**
 * Pagination not needed
 */
pagination: number
/**
 * Country code
 */
country_code: string
}
response: {
data?: CountryState
}
}
/**
 * Returns countries with their states
 */
"GET /api/v1/countries/states/groups": {
response: {
data?: CountryState
}
}
/**
 * Returns currency list, if you want to retrieve all currencies at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/currencies": {
searchParams: {
/**
 * Currency id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Currency[]
meta?: Pagination
}
}
/**
 * Returns shop currency by id
 */
"GET /api/v1/currencies/:id": {
response: {
data?: Currency
}
}
/**
 * Returns locale list, if you want to retrieve all locals at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/locales": {
searchParams: {
/**
 * Locale id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Locale3[]
meta?: Pagination
}
}
/**
 * Returns shop locale by id
 */
"GET /api/v1/locales/:id": {
response: {
data?: Locale3
}
}
/**
 * Get Theme Customizations
 */
"GET /api/v1/theme/customizations": {
response: {
data?: Themes[]
meta?: Pagination
}
}
/**
 * Get Theme Customizations
 */
"GET /api/v1/theme/customizations/:id": {
response: {
data?: Themes
}
}
/**
 * Get logged in customer details
 */
"GET /api/v1/customer/get": {
response: {
data?: Customer
}
}
/**
 * Update customer profile
 */
"POST /api/v1/customer/profile": {
response: {
message?: string
data?: Customer
}
}
/**
 * Logout customer
 */
"POST /api/v1/customer/logout": {
response: {
message?: string
}
}
/**
 * Returns address list, if you want to retrieve all addresses at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/customer/addresses": {
searchParams: {
/**
 * Address id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Address[]
meta?: Pagination
}
}
/**
 * Create customer's address
 */
"POST /api/v1/customer/addresses": {
body: {
company_name?: string
first_name: string
last_name: string
/**
 * Street Address
 */
address: {
address?: {
""?: string
}[]
}[]
/**
 * US (e.g. United States)
 */
country: string
/**
 * CA (e.g. California)
 */
state: string
city: string
postcode: number
phone: number
email: string
vat_id?: string
}
response: {
message?: string
data?: Address
}
}
/**
 * Returns customer's address by id
 */
"GET /api/v1/customer/addresses/:id": {
response: {
data?: Address
}
}
/**
 * Update customer's address
 */
"PUT /api/v1/customer/addresses/:id": {
body: {
company_name?: string
first_name: string
last_name: string
/**
 * Street Address
 */
address?: {
address?: {
""?: string
}[]
}[]
/**
 * US (e.g. United States)
 */
country: string
/**
 * CA (e.g. California)
 */
state: string
city: string
postcode: number
phone: number
email: string
vat_id?: string
}
response: {
message?: string
data?: Address
}
}
/**
 * Delete customer's address by id
 */
"DELETE /api/v1/customer/addresses/:id": {
response: {
message?: string
}
}
/**
 * Login customer
 */
"POST /api/v1/customer/login": {
searchParams: {
/**
 * Accept Token Flag
 */
accept_token?: {
[k: string]: any
}
}
response: {
message?: string
data?: Customer
}
}
/**
 * Register customer
 */
"POST /api/v1/customer/register": {
response: {
message?: string
}
}
/**
 * Forgot Password customer
 */
"POST /api/v1/customer/forgot-password": {
response: {
message?: string
}
}
/**
 * Returns customer/guest's cart
 */
"GET /api/v1/customer/cart": {
response: {
data?: Cart
}
}
/**
 * Add product to customer's cart
 */
"POST /api/v1/customer/cart/add/:productId": {
body: {
/**
 * Status for buy now
 */
is_buy_now?: boolean
/**
 * Enter the product ID
 */
product_id: number
/**
 * Enter the quantity wish to add to cart
 */
quantity: number
/**
 * Use in configurable type product only (Required), variant/child product id
 */
selected_configurable_option?: number
/**
 * Use in configurable type product only (Required), variant's attribute & option ids
 */
super_attribute?: {
""?: number
}[]
/**
 * Use in grouped type product only (Required), index used as simple product ID and value is quantity of simple product
 */
qty?: {
""?: number
}[]
/**
 * Use in downloadable type product only (Required), value used as link ID
 */
links?: {
""?: number
}[]
/**
 * Use in bundle type product only (Required), index used as bundle option id & value used as bundle option's product id
 */
bundle_options?: {
""?: {
""?: number
}[]
}[]
/**
 * Use in bundle type product only (Required), value used as bundle option's product quantity
 */
bundle_option_qty?: {
""?: number
}[]
}
response: {
message?: string
data?: Cart
}
}
/**
 * Update cart item
 */
"PUT /api/v1/customer/cart/update": {
body: {
/**
 * Index used as cart_item_id and value is quantity of the product, Use for all types of product (Required)
 */
qty: {
""?: number
}[]
}
response: {
message?: string
data?: Cart
}
}
/**
 * Delete item from cart using cart item id
 */
"DELETE /api/v1/customer/cart/remove/:cartItemId": {
response: {
data?: Cart
message?: string
}
}
/**
 * Delete all item from cart
 */
"DELETE /api/v1/customer/cart/empty": {
response: {
message?: string
}
}
/**
 * Move cart item to customer's wishlist using cart item id
 */
"POST /api/v1/customer/cart/move-to-wishlist/:cartItemId": {
response: {
data?: Cart
message?: string
}
}
/**
 * Apply coupon to cart
 */
"POST /api/v1/customer/cart/coupon": {
response: {
data?: Cart
message?: string
}
}
/**
 * Remove cart coupon
 */
"DELETE /api/v1/customer/cart/coupon": {
response: {
data?: Cart
message?: string
}
}
/**
 * Save addresses at the checkout
 */
"POST /api/v1/customer/checkout/save-address": {
body: {
billing: {
id?: number
address?: {
""?: string
}[]
save_as_address?: boolean
use_for_shipping?: boolean
first_name?: string
last_name?: string
email?: string
company_name?: string
city?: string
state?: string
country?: string
postcode?: number
phone?: number
}[]
shipping?: {
id?: number
address?: {
""?: string
}[]
save_as_address?: boolean
first_name?: string
last_name?: string
email?: string
company_name?: string
city?: string
state?: string
country?: string
postcode?: number
phone?: number
}[]
}
response: {
message?: string
data?: {
cart?: Cart
rates?: {
carrier_title?: string
rates?: CartSShippingRate
}[]
}[]
}
}
/**
 * Save shipping method at the checkout
 */
"POST /api/v1/customer/checkout/save-shipping": {
response: {
message?: string
data?: {
cart?: Cart
methods?: CartSPayment
}[]
}
}
/**
 * Save payment method at the checkout
 */
"POST /api/v1/customer/checkout/save-payment": {
body: {
payment: {
method?: string
}[]
}
response: {
message?: string
data?: {
cart?: Cart
}[]
}
}
/**
 * Check minimun order at the checkout
 */
"POST /api/v1/customer/checkout/check-minimum-order": {
response: {
message?: string
data?: {
cart?: Cart
status?: boolean
}[]
}
}
/**
 * Create order at the checkout
 */
"POST /api/v1/customer/checkout/save-order": {
response: {
message?: string
data?: {
order?: Order
}[]
}
}
/**
 * Returns order's invoices list, if you want to retrieve all order's invoices at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/customer/invoices": {
searchParams: {
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Invoice[]
meta?: Pagination
}
}
/**
 * Returns order's invoice detail by id for logged in customer
 */
"GET /api/v1/customer/invoices/:id": {
response: {
data?: Invoice
}
}
/**
 * Returns order list, if you want to retrieve all orders at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/customer/orders": {
searchParams: {
/**
 * Order id
 */
id?: number
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Order[]
meta?: Pagination
}
}
/**
 * Returns customer's order by id
 */
"GET /api/v1/customer/orders/:id": {
response: {
data?: Order
}
}
/**
 * Cancel customer's order by id
 */
"POST /api/v1/customer/orders/:id/cancel": {
response: {
message?: string
}
}
/**
 * Returns order's shipments list, if you want to retrieve all order's shipments at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/customer/shipments": {
searchParams: {
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Shipment[]
meta?: Pagination
}
}
/**
 * Returns order's shipment detail by id for logged in customer
 */
"GET /api/v1/customer/shipments/:id": {
response: {
data?: Shipment
}
}
/**
 * Returns order's transactions list, if you want to retrieve all order's transactions at once pass pagination=0 otherwise ignore this parameter
 */
"GET /api/v1/customer/transactions": {
searchParams: {
/**
 * Sort column
 */
sort?: string
/**
 * Sort order
 */
order?: ("desc" | "asc")
/**
 * Page number
 */
page?: number
/**
 * Limit
 */
limit?: number
}
response: {
data?: Transaction[]
meta?: Pagination
}
}
/**
 * Returns order's transaction detail by id for logged in customer
 */
"GET /api/v1/customer/transactions/:id": {
response: {
data?: Transaction
}
}
/**
 * Returns customer's wishlist
 */
"GET /api/v1/customer/wishlist": {
response: {
data?: Wishlist
}
}
/**
 * Add or Remove product to customer's wishlist
 */
"POST /api/v1/customer/wishlist/:id": {
body: {
additional?: {
additional?: {
selected_configurable_option?: number
quantity?: number
product_id?: number
super_attribute?: {
""?: number
}[]
}[]
}[]
}
response: {
message?: string
}
}
/**
 * Move product from wishlist to cart
 */
"POST /api/v1/customer/wishlist/:id/move-to-cart": {
response: {
message?: string
data?: Wishlist
}
}
}
/**
 * Attribute model
 */
export interface Attribute {
id?: ID
name?: Name
admin_name?: AdminName
code?: Code
type?: Type
swatch_type?: SwatchType
options?: AttributeOption
validation?: Validation
position?: Position
is_comparable?: IsComparable
is_configurable?: IsConfigurable
is_required?: IsRequired
is_unique?: IsUnique
is_filterable?: IsFilterable
is_user_defined?: IsUserDefine
is_visible_on_front?: IsVisibleOnFront
use_in_flat?: UseInFlat
value_per_locale?: ValuePerLocale
value_per_channel?: ValuePerChannel
created_at?: CreatedAt
updated_at?: UpdatedAt
}
/**
 * AttributeOption model
 */
export interface AttributeOption {
id?: ID1
admin_name?: AdminName1
label?: Label
swatch_value?: SwatchValue
}
/**
 * Pagination model
 */
export interface Pagination {
current_page?: CurrentPage
from?: From
last_page?: LastPage
per_page?: PerPage
links?: Links
path?: Path
to?: To
total?: Total
}
/**
 * AttributeFamily model
 */
export interface AttributeFamily {
id?: ID2
code?: Code1
name?: Name1
status?: Status
groups?: AttributeGroup
created_at?: CreatedAt2
updated_at?: UpdatedAt2
}
/**
 * AttributeGroup model
 */
export interface AttributeGroup {
id?: ID3
code?: Code2
name?: Name2
swatch_type?: SwatchType1
attributes?: Attribute
created_at?: CreatedAt1
updated_at?: UpdatedAt1
}
/**
 * Category model
 */
export interface Category {
id?: ID4
name?: Name3
slug?: Slug
display_mode?: DisplayMode
description?: Description
meta_title?: MetaTitle
meta_description?: MetaDescription
meta_keywords?: MetaKeywords
status?: Status1
image_url?: ImageURL
category_icon_path?: CategoryIconPath
additional?: Additional
created_at?: CreatedAt3
updated_at?: UpdatedAt3
}
/**
 * Category's additional information
 */
export interface Additional {

}
/**
 * Product model
 */
export interface Product {
id?: ID5
sku?: SKU
type?: Type1
name?: Name4
url_key?: URLKey
price?: Price
formatted_price?: FormattedPrice
short_description?: ShortDescription
description?: Description1
images?: ProductImage
videos?: ProductVideo
base_image?: BaseImage
created_at?: CreatedAt4
updated_at?: UpdatedAt4
reviews?: Reviews
in_stock?: InStock
is_saved?: InSaved
is_item_in_cart?: InItemInCart
show_quantity_changer?: ShowQuantityChanger
currency_options?: CurrencyOptions
special_price?: SpecialPrice
formatted_special_price?: FormattedSpecialPrice
regular_price?: RegularPrice
formatted_regular_price?: FormattedRegularPrice
variants?: ProductFlat
super_attributes?: Attribute
grouped_products?: ProductFlat
downloadable_links?: ProductDownloadableLink
downloadable_samples?: ProductDownloadableSample
bundle_options?: BundleOptions
}
/**
 * ProductImage model
 */
export interface ProductImage {
id?: ID6
type?: Type2
path?: Path1
url?: URL
original_image_url?: OriginalImageUrl
small_image_url?: SmallImageUrl
medium_image_url?: MediumImageUrl
large_image_url?: LargeImageUrl
product_id?: ProductID
position?: Position1
}
/**
 * ProductVideo model
 */
export interface ProductVideo {
id?: ID7
type?: Type3
path?: Path2
url?: URL1
}
/**
 * ProductFlat model, Use in case of variants, grouped_products.
 */
export interface ProductFlat {
id?: ID8
type?: Type4
attribute_family_id?: AttributeFamilyID
sku?: SKU1
product_number?: ProductNumber
name?: Name5
url_key?: URLKey1
tax_category_id?: TaxCategoryID
new?: New
featured?: Featured
visible_individually?: VisibleIndividually
guest_checkout?: GuestCheckout
status?: Status2
color?: Color
size?: Size
brand?: Brand
short_description?: ShortDescription1
description?: Description2
meta_title?: MetaTitle1
meta_keywords?: MetaKeywords1
meta_description?: MetaDescription1
price?: Price1
cost?: Cost
special_price?: SpecialPrice1
special_price_from?: SpecialPriceFrom
special_price_to?: SpecialPriceTo
length?: Length
width?: Width
height?: Height
weight?: Weight
inventories?: ProductInventory
ordered_inventories?: ProductOrderedInventory
customer_group_prices?: ProductCustomerGroupPrice
attribute_values?: ProductAttributeValue
additional?: Additional1
parent_id?: ParentID
created_at?: CreatedAt6
updated_at?: UpdatedAt6
qty?: Qty3
isSaleable?: IsSaleable
formatted_price?: FormattedPrice1
show_quantity_changer?: ShowQuantityChanger1
}
/**
 * ProductInventory model
 */
export interface ProductInventory {
id?: ID9
qty?: Qty
product_id?: ProductID1
inventory_source_id?: InventorySourceID
vendor_id?: VendorID
}
/**
 * ProductOrderedInventory model
 */
export interface ProductOrderedInventory {
id?: ID10
qty?: Qty1
product_id?: ProductID2
channel_id?: ChannelID
}
/**
 * ProductCustomerGroupPrice model
 */
export interface ProductCustomerGroupPrice {
id?: ID11
qty?: Qty2
value_type?: ValueType
value?: Value
product_id?: ProductID3
customer_group_id?: CustomerGroupID
created_at?: CreatedAt5
updated_at?: UpdatedAt5
}
/**
 * ProductAttributeValue model
 */
export interface ProductAttributeValue {
id?: ID12
locale?: Locale
channel?: Channel
text_value?: TextValue
boolean_value?: BooleanValue
integer_value?: IntegerValue
float_value?: FloatValue
datetime_value?: DatetimeValue
date_value?: DateValue
json_value?: JsonValue
product_id?: ProductID4
attribute_id?: AttributeID
}
/**
 * Date type attribute value i.e. Special Price From
 */
export interface DateValue {
[k: string]: any
}
/**
 * Json type attribute value i.e. Additional Info
 */
export interface JsonValue {

}
/**
 * Product's additional information
 */
export interface Additional1 {

}
/**
 * ProductDownloadableLink model, Only use with downloadable type product
 */
export interface ProductDownloadableLink {
id?: ID13
title?: Title
translations?: ProductDownloadableLinkTranslation
type?: Type5
url?: URL2
file?: File
file_name?: FileName
file_url?: FileURL
price?: Price2
sample_type?: SampleType
sample_url?: SampleURL
sample_file?: SampleFile
sample_file_name?: SampleFileName
sample_file_url?: SampleFileURL
sample_download_url?: SampleDownloadURL
downloads?: Downloads
sort_order?: SortOrder
product_id?: ProductID5
created_at?: CreatedAt7
updated_at?: UpdatedAt7
}
/**
 * ProductDownloadableLinkTranslation model
 */
export interface ProductDownloadableLinkTranslation {
id?: ID14
locale?: Locale1
title?: Title1
product_downloadable_link_id?: ProductDownloadableLinkID
}
/**
 * ProductDownloadableSample model, Only use with downloadable type product
 */
export interface ProductDownloadableSample {
id?: ID15
title?: Title2
translations?: ProductDownloadableSampleTranslation
type?: Type6
url?: URL3
file?: File1
file_name?: FileName1
file_url?: FileURL1
download_url?: DownloadURL
sort_order?: SortOrder1
product_id?: ProductID6
created_at?: CreatedAt8
updated_at?: UpdatedAt8
}
/**
 * ProductDownloadableSampleTranslation model
 */
export interface ProductDownloadableSampleTranslation {
id?: ID16
locale?: Locale2
title?: Title3
product_downloadable_sample_id?: ProductDownloadableSampleID
}
/**
 * ProductConfigurableConfig model, Use with configurable type product only.
 */
export interface ProductConfigurableConfig {
chooseText?: ChooseText
attributes?: Attributes
index?: Index
variant_prices?: VariantPrices
variant_images?: VariantImages
variant_videos?: VariantVideos
regular_price?: RegularPrice1
}
/**
 * Mapped list of configurable attributes with their options
 */
export interface Index {
variant_product_id?: {
attribute_id?: number
}
}
/**
 * Variant prices
 */
export interface VariantPrices {
variant_product_id?: {
regular_price?: {
price?: number
formated_price?: string
}
final_price?: {
price?: number
formated_price?: string
}
}
}
/**
 * Variant images
 */
export interface VariantImages {
variant_product_id?: {
small_image_url?: string
medium_image_url?: string
large_image_url?: string
original_image_url?: string
}[]
}
/**
 * Variant videos
 */
export interface VariantVideos {
variant_product_id?: {
path?: string
}[]
}
/**
 * Regular price
 */
export interface RegularPrice1 {
formated_price?: string
price?: number
}
/**
 * ProductReview model
 */
export interface ProductReview {
id?: ID17
title?: Title4
rating?: Rating
comment?: Comment
name?: Name6
status?: Status3
attachments?: Attachments
created_at?: CreatedAt9
updated_at?: UpdatedAt9
product_id?: ProductID7
product?: Product
customer_id?: CustomerID
customer?: Customer
}
/**
 * Customer model
 */
export interface Customer {
id?: ID18
first_name?: FirstName
last_name?: LastName
email?: Email
gender?: Gender
date_of_birth?: DateOfBirth
phone?: Phone
status?: Status4
subscribed_to_news_letter?: NewsletterSubscription
image?: Image
notes?: Notes
created_at?: CreatedAt10
updated_at?: UpdatedAt10
}
/**
 * Channel model
 */
export interface Channel1 {
id?: ID19
code?: Code3
name?: Name7
description?: Description3
timezone?: Timezone
theme?: Theme
home_page_content?: HomePageContent
footer_content?: FooterContent
hostname?: Hostname
logo?: Logo
logo_url?: LogoURL
favicon?: Favicon
favicon_url?: FaviconURL
default_locale?: Locale3
root_category_id?: RootCategoryId
root_category?: Category
created_at?: CreatedAt12
updated_at?: UpdatedAt12
}
/**
 * Locale model
 */
export interface Locale3 {
id?: ID20
code?: Code4
name?: Name8
created_at?: CreatedAt11
updated_at?: UpdatedAt11
direction?: Direction
locale_image?: Image1
}
/**
 * ConfigValue model
 */
export interface ConfigValue {
code1?: Value1
code2?: Value2
}
/**
 * Config model
 */
export interface Config {
id?: ID21
code?: Code5
value?: Value3
channel_code?: ChannelCode
locale_code?: LocaleCode
created_at?: CreatedAt13
updated_at?: UpdatedAt13
}
/**
 * Country model
 */
export interface Country {
id?: ID22
code?: Code6
name?: Name9
}
/**
 * CountryState model
 */
export interface CountryState {
id?: ID23
country_code?: CountryCode
code?: Code7
default_name?: DefaultName
country_id?: CountryID
translations?: CountryStateTranslation
}
/**
 * CountryStateTranslation model
 */
export interface CountryStateTranslation {
id?: ID24
locale?: Locale4
default_name?: DefaultName1
country_state_id?: CountrySStateID
}
/**
 * Currency model
 */
export interface Currency {
id?: ID25
code?: Code8
name?: Name10
created_at?: CreatedAt14
updated_at?: UpdatedAt14
symbol?: Symbol
}
/**
 * Theme model
 */
export interface Themes {
id?: ID26
channel_id?: ChannelId
type?: Type7
name?: Name11
status?: Status5
created_at?: CreatedAt15
updated_at?: UpdatedAt15
sort_order?: SortOrder2
}
/**
 * Address model
 */
export interface Address {
id?: ID27
first_name?: FirstName1
last_name?: LastName1
company_name?: CompanyName
vat_id?: VATID
address1?: Address1
address2?: Address2
country?: Country1
country_name?: CountryName
state?: State
city?: City
postcode?: Postcode
phone?: Phone1
is_default?: IsDefaultAddressOrNot
created_at?: CreatedAt16
updated_at?: UpdatedAt16
}
/**
 * Cart model
 */
export interface Cart {
id?: ID28
customer_email?: CustomerEmail
customer_first_name?: CustomerFirstName
customer_last_name?: CustomerLastName
shipping_method?: ShippingMethod
coupon_code?: CouponCode
items_count?: ItemCount
items_qty?: ItemQuantity
base_currency_code?: BaseCurrencyCode
channel_currency_code?: ChannelCurrencyCode
cart_currency_code?: CartCurrencyCode
grand_total?: GrandTotal
formatted_grand_total?: FormattedGrandTotal
base_grand_total?: BaseGrandTotal
formatted_based_grand_total?: FormattedBaseGrandTotal
sub_total?: SubTotal
formatted_sub_total?: FormattedSubTotal
base_sub_total?: BaseSubTotal
formatted_based_sub_total?: FormattedBaseSubTotal
tax_total?: TaxTotal
formatted_tax_total?: FormattedTaxTotal
base_tax_total?: BaseTaxTotal
formatted_based_tax_total?: FormattedBaseTaxTotal
discount?: DiscountTotal
formatted_discount?: FormattedDiscountTotal
base_discount?: BaseDiscountTotal
formatted_based_discount?: FormattedBaseDiscountTotal
is_guest?: CartGuestStatus
is_active?: CartActiveStatus
customer?: Customer
items?: CartItem
selected_shipping_rate?: CartSShippingRate
payment?: CartSPayment
billing_address?: CartAddress
shipping_address?: CartAddress
created_at?: CreatedAt21
updated_at?: UpdatedAt21
minItems?: 0
}
/**
 * CartItem model
 */
export interface CartItem {
id?: ID29
quantity?: ItemQuantity1
sku?: ProductSKU
type?: ProductType
name?: ProductName
weight?: ProductWeight
total_weight?: TotalCartSItemWeight
price?: ProductPrice
formatted_price?: FormattedPrice2
base_price?: ProductBasePrice
formatted_based_price?: FormattedBasePrice
total?: ItemTotal
formatted_total?: FormattedTotal
base_total?: ProductBaseTotal
formatted_based_total?: FormattedBaseTotal
tax_percent?: TaxPercentage
tax_amount?: TaxAmount
formatted_tax_amount?: FormattedTaxAmount
base_tax_amount?: BaseTaxAmount
formatted_based_tax_amount?: FormattedBaseTaxAmount
additional?: AdditionalInfoAboutCartItem
child?: CartItem
created_at?: CreatedAt17
updated_at?: UpdatedAt17
}
/**
 * Cart's shipping rate model
 */
export interface CartSShippingRate {
id?: ID30
carrier?: ShippingCarrierCode
carrier_title?: ShippingCarrierTitle
method?: ShippingMethodCode
method_title?: ShippingMethodTitle
method_description?: ShippingMethodDescription
price?: ShippingPrice
formatted_price?: FormattedShippingPrice
base_price?: BaseShippingPrice
formatted_based_price?: FormattedBaseShippingPrice
created_at?: CreatedAt18
updated_at?: UpdatedAt18
}
/**
 * Cart's payment model
 */
export interface CartSPayment {
id?: ID31
method?: PaymentMethodCode
method_title?: PaymentMethodTitle
created_at?: CreatedAt19
updated_at?: UpdatedAt19
}
/**
 * Cart Address model
 */
export interface CartAddress {
id?: ID32
first_name?: FirstName2
last_name?: LastName2
name?: CustomerFullName
email?: CustomerSEmail
address1?: CartAddress1
address2?: Address21
country?: Country2
country_name?: CountryName1
state?: State1
city?: City1
postcode?: Postcode1
phone?: Phone2
created_at?: CreatedAt20
updated_at?: UpdatedAt20
}
/**
 * Order model
 */
export interface Order {
id?: ID33
increment_id?: IncrementID
customer_email?: Email1
customer_first_name?: FirstName3
customer_last_name?: LastName3
status?: Status6
payment_title?: PaymentTitle
base_currency_code?: BaseCurrencyCode1
order_currency_code?: OrderCurrencyCode
grand_total?: GrandTotal1
formatted_grand_total?: FormattedGrandTotal1
base_grand_total?: BaseGrandTotal1
formatted_based_grand_total?: FormattedBaseGrandTotal1
items?: OrderItem
customer?: Customer
created_at?: CreatedAt23
updated_at?: UpdatedAt23
minItems?: 0
}
/**
 * OrderItem model
 */
export interface OrderItem {
id?: ID34
sku?: SKU2
type?: Type8
name?: Name12
coupon_code?: CouponCode1
weight?: ItemSWeight
qty_ordered?: OrderedQuantity
qty_shipped?: ShippedQuantity
qty_invoiced?: InvoicedQuantity
qty_canceled?: CanceledQuantity
qty_refunded?: RefundedQuantity
price?: OrderedItemPrice
formatted_price?: FormattedPrice3
base_price?: BasePrice
formatted_base_price?: FormattedBasePrice1
total?: OrderedItemTotal
formatted_total?: FormattedOrderedItemTotal
base_total?: BaseTotal
formatted_base_total?: FormattedBaseTotal1
total_invoiced?: TotalInvoicedOfOrderedItem
base_total_invoiced?: TotalBaseInvoicedOfOrderedItem
amount_refunded?: TotalRefundedAmountOfOrderedItem
base_amount_refunded?: TotalBaseRefundedAmountOfOrderedItem
tax_percent?: TaxPercentageAppliedOnOrderedItem
tax_amount?: TaxAmountOfOrderedItem
base_tax_amount?: BaseTaxAmountOfOrderedItem
product_id?: ProductID8
product_type?: ProductTypeOfOrderedItem
order_id?: OrderID
parent_id?: ParentIDOfProduct
created_at?: CreatedAt22
updated_at?: UpdatedAt22
}
/**
 * Invoice model
 */
export interface Invoice {
id?: ID35
increment_id?: IncrementID1
state?: InvoiceSStateStatus
email_sent?: InvoiceEmailSent
total_qty?: TotalInvoicedQuantity
base_currency_code?: StoreBaseCurrencyCode
channel_currency_code?: ChannelWebsiteCurrencyCode
order_currency_code?: OrderCurrencyCode1
sub_total?: InvoiceSubTotal
formatted_sub_total?: FormattedInvoiceSubTotal
base_sub_total?: InvoiceBaseSubTotal
formatted_base_sub_total?: FormattedInvoiceBaseSubTotal
grand_total?: InvoiceGrandTotal
formatted_grand_total?: FormattedInvoiceGrandTotal
base_grand_total?: InvoiceBaseGrandTotal
formatted_base_grand_total?: FormattedInvoiceBaseGrandTotal
order_id?: OrderID1
order_address_id?: OrderSAddressID
created_at?: CreatedAt24
updated_at?: UpdatedAt24
transaction_id?: InvoiceSTransactionID
reminders?: InvoiceReminderCount
next_reminder_at?: TimeForNextInvoiceReminder
}
/**
 * Shipment model
 */
export interface Shipment {
id?: ID36
status?: OrderSShipmentStatus
total_qty?: ShipmentTotalQuantity
total_weight?: TotalWeightOfShipment
carrier_code?: CarrierShipmentCode
carrier_title?: CarrierTitle
track_number?: TrackingID
email_sent?: ShipmentEmailSent
customer?: Customer
order_id?: OrderID2
order_address_id?: ShipmentSAddressIDOfOrder
created_at?: CreatedAt25
updated_at?: UpdatedAt25
}
/**
 * Transaction model
 */
export interface Transaction {
id?: ID37
transaction_id?: TransactionID
status?: TransactionStatus
type?: TransactionType
payment_method?: PaymentMethodUsedForTransaction
data?: TransactionRelatedInfo
invoice_id?: InvoiceID
order_id?: OrderID3
created_at?: CreatedAt26
updated_at?: UpdatedAt26
amount?: TransactionAmountPaid
}
/**
 * Transaction related information
 */
export interface TransactionRelatedInfo {

}
/**
 * Wishlist model
 */
export interface Wishlist {
id?: ID38
channel_id?: ChannelID1
product_id?: ProductID9
customer_id?: CustomerID1
item_options?: ProductOptionInfo
moved_to_cart?: ProductMoveToCartDate
shared?: WishlistSharedStatus
time_of_moving?: DateOfMovingProduct
created_at?: CreatedAt27
updated_at?: UpdatedAt27
additional?: AdditionalInfoAboutWishlistProduct
customer?: Customer
}
/**
 * Product option related information
 */
export interface ProductOptionInfo {

}
/**
 * Additional information about wishlist product
 */
export interface AdditionalInfoAboutWishlistProduct {

}
